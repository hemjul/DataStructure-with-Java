/*
Java program demonstrating the implementation of singly linked list..
*/
class Link
{
	public int iData;
	public double dData;
	public Link next;
	public Link(int iD,double dD)
	{
		iData=iD;
		dData=dD;
	}
	public void display()
	{
		System.out.println("{"+iData+","+dData+"}");
	}
}
class LinkedList
{
	private Link first;
	public LinkedList()
	{
		first=null;
	}
	public boolean isEmpty()
	{
		return(first==null);
	}
	public void insertFirst(int id,double dd)
	{
		Link newLink = new Link(id,dd);
			newLink.next=first;
			first=newLink;
	}
	
	public void insertLast(int id,double dd)
	{
		Link current=first;
		Link newLink = new Link(id,dd);
		if(isEmpty())
		{
			first=newLink;
		}
		else
		{	
		  while(current.next!=null)
	    	{
			   current=current.next;
		    }
		
		   current.next=newLink;
		  newLink.next=null;
		}
	}
	
	public void deleteFirst()
	{
		if(first!=null)
		   first=first.next;
	}
	
	public void deleteLast()
	{
		Link current=first;
		
		while(current.next.next!=null)
		{
			current=current.next;
		}
		current.next=null;
	}
	
	public void displayList()
	{
		System.out.println("First-->last:");
		Link current=first;
		while(current!=null)
		{

			current.display();
			current=current.next;
		}
		System.out.println("");
	}
}
class SingleLinkedList
{
	public static void main(String args[])
	{
	 LinkedList list = new LinkedList();
	 list.insertLast(22,33.6);
	 list.insertFirst(12,63.96);
	 list.insertFirst(15,96.25);
	 list.insertFirst(16,97.25);
	 list.insertFirst(18,100.25);
	 list.insertLast(88,19.63);
	 list.deleteFirst();
	 list.displayList();
	 list.deleteLast();
	 list.displayList();
	}
	
}
